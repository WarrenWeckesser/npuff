import pytest
import numpy as np
from numpy.testing import assert_allclose
from ufunclab import yeo_johnson, inv_yeo_johnson


ldeps = np.finfo(np.longdouble).eps


def test_yeo_johnson_basic():
    xp = np.array([1e-30, 1.5e-8, 0.01, 0.5, 2.5, 10.0, 500])
    x = np.concatenate((-xp[::-1], [0], xp))
    lmbda = np.array([-2.5, 0, 0.996, 1, 1.00001, 1.5, 2, 2.00001, 6])
    y = yeo_johnson.outer(x, lmbda)
    # The expected values were computed with mpmath.
    expected = np.array(
        [[-313369880960.91815,
          -125500.0,
          -510.5719765629012,
          -500.0,
          -499.9738555100555,
          -42.76605857119878,
          -6.2166061010848646,
          -6.216412874131857,
          -0.24999999999603184],
         [-10790.600790131868,
          -60.0,
          -10.065751997007178,
          -10.0,
          -9.999836233044743,
          -4.6332495807108,
          -2.3978952727983707,
          -2.397866523519467,
          -0.24998292466361588],
         [-62.164717955862734,
          -5.625,
          -2.5075524887189085,
          -2.5,
          -2.499981153382283,
          -1.7416573867739413,
          -1.252762968495368,
          -1.25275512145286,
          -0.24833402748854644],
         [-1.1556157580933155,
          -0.625,
          -0.5004330324094386,
          -0.5,
          -0.49999891802488877,
          -0.4494897427831781,
          -0.4054651081081644,
          -0.4054642860995059,
          -0.2006172839506173],
         [-0.010176463807547536,
          -0.01005,
          -0.010000199339293638,
          -0.01,
          -0.0099999995016584,
          -0.009975124224178055,
          -0.009950330853168083,
          -0.00995033035812268,
          -0.00975491387929593],
         [-1.5000000393750004e-08,
          -1.50000001125e-08,
          -1.5000000000449998e-08,
          -1.5e-08,
          -1.4999999999998874e-08,
          -1.499999994375e-08,
          -1.49999998875e-08,
          -1.4999999887498876e-08,
          -1.4999999437500016e-08],
         [-1e-30, -1e-30, -1e-30, -1e-30, -1e-30, -1e-30, -1e-30, -1e-30,
          -1e-30],
         [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
         [1e-30, 1e-30, 1e-30, 1e-30, 1e-30, 1e-30, 1e-30, 1e-30, 1e-30],
         [1.4999999606250006e-08,
          1.49999998875e-08,
          1.499999999955e-08,
          1.5e-08,
          1.5000000000001124e-08,
          1.5000000056249998e-08,
          1.50000001125e-08,
          1.5000000112501125e-08,
          1.500000056250001e-08],
         [0.0098275893696739,
          0.009950330853168083,
          0.009999800665999987,
          0.01,
          0.010000000498341634,
          0.010024958488806612,
          0.01005,
          0.010050000501662533,
          0.0102533584335],
         [0.25484505227951537,
          0.4054651081081644,
          0.4995674509123313,
          0.5,
          0.500001081978132,
          0.5580782047249224,
          0.625,
          0.6250014364845314,
          1.7317708333333333],
         [0.3825462046098009,
          1.252762968495368,
          2.4924750891096568,
          2.5,
          2.5000188467900784,
          3.6986002845695984,
          5.625,
          5.625048606969421,
          306.2109375],
         [0.3990032682823876,
          2.3978952727983707,
          9.93473592918608,
          10.0,
          10.00016377000478,
          23.655248462606266,
          60.0,
          60.001150738279954,
          295260.0],
         [0.39999992880234714,
          6.2166061010848646,
          489.65415598834903,
          500.0,
          500.02614590321474,
          7475.26511472353,
          125500.0,
          125507.17457837789,
          2635573333958833.5]]
    )
    assert_allclose(y, expected, rtol=2e-15)


@pytest.mark.parametrize('x, lam, expected, rtol', [
    ('1e-400', 2.5, '1e-400', ldeps),
    ('3.0',    0.0, '1.386294361119890618834464242916353136', ldeps)
])
def test_yeo_johnson_longdouble(x, lam, expected, rtol):
    x = np.longdouble(x)
    lam = np.longdouble(lam)
    expected = np.longdouble(expected)
    y = yeo_johnson(x, lam)
    assert_allclose(y, expected, rtol=rtol)


@pytest.mark.parametrize('x, lam, expected, rtol', [
    ('3.0', '0.0', '19.0855369231876677409285296545817179', ldeps),
    ('-1.999999995', '2.25', '-14.999999840000000999999995000000022', 4*ldeps),
])
def test_inv_yeo_johnson_longdouble(x, lam, expected, rtol):
    x = np.longdouble(x)
    lam = np.longdouble(lam)
    expected = np.longdouble(expected)
    y = inv_yeo_johnson(x, lam)
    assert_allclose(y, expected, rtol=rtol)
