
import pytest
from numpy.testing import assert_allclose
from ufunclab import hyperbolic_ramp


@pytest.mark.parametrize('x, a, expected',
                         [(0, 1, 1),
                          (1, 1, 1.618033988749895),
                          (-1, 1, 0.6180339887498949),
                          (-0.125, 1, 0.9394512213675873),
                          (-16, 1, 0.06225774829854965),
                          (1e-9, 1, 1.0000000005),
                          (-1e9, 1, 1e-9),
                          (1e200, 1, 1e200),
                          (-1e200, 1, 1e-200),
                          (-8e154, 1, 1.25e-155),
                          (-8e175, 1, 1.25e-176),
                          (-0.5, 1e-9, 2e-18),
                          (2e-8, 1e-9, 2.004987562112089e-08),
                          (-1, 1e-9, 1e-18),
                          (1e-15, 1e-13, 1.005012499921876e-13),
                          (0, 5, 5),
                          (1, 5, 5.524937810560445),
                          (-1, 5, 4.524937810560445),
                          (13, 5, 14.700609733428363),
                          (1e200, 5, 1e200),
                          (-1e6, 5, 2.4999999999375e-05),
                          (-1e193, 1e200, 9.999999500000012e+199),
                          (-1e202, 1e200, 9.999000199950015e+197),
                          (1e194, 1e200, 1.000000500000125e+200),
                          (1e203, 1e200, 1.000000999999e+203)])
def test_hyperbolic_ramp(x, a, expected):
    y = hyperbolic_ramp(x, a)
    assert_allclose(y, expected, rtol=5e-15)
